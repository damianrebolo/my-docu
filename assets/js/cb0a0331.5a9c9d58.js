"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8400],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(r),g=s,m=d["".concat(c,".").concat(g)]||d[g]||l[g]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function g(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,i=new Array(a);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4618:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var n=r(7462),s=(r(7294),r(3905));const a={id:"js-destructuring-assignment",title:"Destructuring assignment",sidebar_label:"Destructuring assignment",slug:"/destructuring-assignment"},i=void 0,o={unversionedId:"javascript/js-destructuring-assignment",id:"javascript/js-destructuring-assignment",title:"Destructuring assignment",description:"The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.",source:"@site/docs/javascript/js-destructuring-assignment.md",sourceDirName:"javascript",slug:"/destructuring-assignment",permalink:"/my-docu/docs/destructuring-assignment",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/js-destructuring-assignment.md",tags:[],version:"current",frontMatter:{id:"js-destructuring-assignment",title:"Destructuring assignment",sidebar_label:"Destructuring assignment",slug:"/destructuring-assignment"},sidebar:"mySidebar",previous:{title:"Spread Syntax",permalink:"/my-docu/docs/spread-syntax"},next:{title:"Introduction to events",permalink:"/my-docu/docs/introduction-to-events"}},c={},u=[{value:"Object destructuring",id:"object-destructuring",level:3},{value:"Array destructuring",id:"array-destructuring",level:3},{value:"Function Components destructuring",id:"function-components-destructuring",level:3},{value:"Resources",id:"resources",level:2}],p={toc:u};function l(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"destructuring assignment")," syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables."),(0,s.kt)("h3",{id:"object-destructuring"},"Object destructuring"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const person = { name: 'chantastic' };\nconst { name } = person;\n")),(0,s.kt)("h3",{id:"array-destructuring"},"Array destructuring"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const x = [1, 2, 3, 4, 5];\nconst [y, z] = x;\nconsole.log(y); // 1\nconsole.log(z); // 2\n\n// A variable can be assigned a default, in the case that the value unpacked from the array is undefined.\nlet a, b;\n\n[a = 5, b = 7] = [1];\nconsole.log(a); // 1\nconsole.log(b); // 7\n")),(0,s.kt)("h3",{id:"function-components-destructuring"},"Function Components destructuring"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"function Greeting(props) {\n  return <div>Hi {props.name}!</div>;\n}\n\nfunction Greeting({ name }) {\n  return <div>Hi {name}!</div>;\n}\n\n// There's a syntax for collecting remaining props into an object.\n// It's called rest parameter syntax and looks like this.\nfunction Greeting({ name, ...restProps }) {\n  return <div>Hi {name}!</div>;\n}\n")),(0,s.kt)("h2",{id:"resources"},"Resources"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://reactpatterns.com/#destructuring-props"},"https://reactpatterns.com/#destructuring-props")))}l.isMDXComponent=!0}}]);