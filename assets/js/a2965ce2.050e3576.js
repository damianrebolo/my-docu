"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7454],{3905:(e,o,n)=>{n.d(o,{Zo:()=>i,kt:()=>h});var t=n(7294);function a(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function r(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?r(Object(n),!0).forEach((function(o){a(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function l(e,o){if(null==e)return{};var n,t,a=function(e,o){if(null==e)return{};var n,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],o.indexOf(n)>=0||(a[n]=e[n]);return a}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=t.createContext({}),c=function(e){var o=t.useContext(p),n=o;return e&&(n="function"==typeof e?e(o):s(s({},o),e)),n},i=function(e){var o=c(e.components);return t.createElement(p.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},y=t.forwardRef((function(e,o){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),y=c(n),h=a,u=y["".concat(p,".").concat(h)]||y[h]||d[h]||r;return n?t.createElement(u,s(s({ref:o},i),{},{components:n})):t.createElement(u,s({ref:o},i))}));function h(e,o){var n=arguments,a=o&&o.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=y;var l={};for(var p in o)hasOwnProperty.call(o,p)&&(l[p]=o[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},7750:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var t=n(7462),a=(n(7294),n(3905));const r={id:"js-shallow-vs-deep-copy",title:"Shallow Vs Deep Copy",sidebar_label:"Shallow Vs Deep Copy",slug:"/shallow-vs-deep-copy",sidebar_position:6},s=void 0,l={unversionedId:"javascript/js-shallow-vs-deep-copy",id:"javascript/js-shallow-vs-deep-copy",title:"Shallow Vs Deep Copy",description:"Let's try to understand the concept of shallow & deep copy in the case of Objects.",source:"@site/docs/javascript/js-shallow-vs-deep-copy.md",sourceDirName:"javascript",slug:"/shallow-vs-deep-copy",permalink:"/my-docu/docs/shallow-vs-deep-copy",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/js-shallow-vs-deep-copy.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"js-shallow-vs-deep-copy",title:"Shallow Vs Deep Copy",sidebar_label:"Shallow Vs Deep Copy",slug:"/shallow-vs-deep-copy",sidebar_position:6},sidebar:"mySidebar",previous:{title:"Synchronous vs Asynchronous",permalink:"/my-docu/docs/sync-vs-async"},next:{title:"History",permalink:"/my-docu/docs/w3-history"}},p={},c=[{value:"Shallow Copy",id:"shallow-copy",level:2},{value:"Deep Copy",id:"deep-copy",level:2},{value:"Here the problem of Shallow copy",id:"here-the-problem-of-shallow-copy",level:3}],i={toc:c};function d(e){let{components:o,...n}=e;return(0,a.kt)("wrapper",(0,t.Z)({},i,n,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Let's try to understand the concept of shallow & deep copy in the case of Objects."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const person = {\n  name: \"Damian\",\n  age: 34,\n};\n\nconst copyObj = person;\n\nperson.name = \"John\";\ncopyObj.age = 45;\n\nconsole.log(person); // { name: 'John', age: 45 }\nconsole.log(copyObj); // { name: 'John', age: 45 }\n")),(0,a.kt)("p",null,"If we modify the ",(0,a.kt)("inlineCode",{parentName:"p"},"person")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"copyObj")," objects, changes are reflected on both of them. Because both of the objects ",(0,a.kt)("inlineCode",{parentName:"p"},"refer")," to the same ",(0,a.kt)("inlineCode",{parentName:"p"},"memory location"),"."),(0,a.kt)("h2",{id:"shallow-copy"},"Shallow Copy"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Shallow copy is a bit-wise copy of an object. A new object is created that has an exact copy of the values in the original object."),(0,a.kt)("p",{parentName:"admonition"},"If any of the fields of the object are references to other objects, just the reference addresses are copied i.e., only the memory address is copied.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const person = {\n  name: \"Damian\",\n  age: 34,\n};\n\nconst shallowCopy = { ...person };\n\nperson.name = \"John\";\nshallowCopy.age = 45;\n\nconsole.log(person); // { name: 'John', age: 34 }\nconsole.log(shallowCopy); // { name: 'Damian', age: 45 }\n")),(0,a.kt)("p",null,"Then what is Deep Copy and why do we use it?"),(0,a.kt)("h2",{id:"deep-copy"},"Deep Copy"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Deep copy is a process in which the copying process occurs recursively.\nIt means first constructing a new collection object and then recursively populating it with copies of the child objects found in the original."),(0,a.kt)("p",{parentName:"admonition"},"In the case of deep copy, a copy of an object is copied into another object.")),(0,a.kt)("h3",{id:"here-the-problem-of-shallow-copy"},"Here the problem of Shallow copy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const person = {\n  name: "Damian",\n  age: 34,\n  address: {\n    city: "LA",\n  },\n};\n\nconst shallowCopy = { ...person };\n\nperson.name = "John";\nperson.address.city = "NY";\nshallowCopy.age = 45;\nshallowCopy.address.city = "CA";\n\nconsole.log(person); // { name: \'John\', age: 34, address: { city: "CA" } }\nconsole.log(shallowCopy); // { name: \'Damian\', age: 45, address: { city: "CA" } }\n')),(0,a.kt)("p",null,"If you see the shallowCopy object is having non-primitive values. It has a nested Object. Unlike the previous examples, this object did not have all primitive values in it. So, exactly in this kind of scenario, if we want to create a new copy of the shallowCopy, shallow copying will no longer work."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"To solve this problem we can use cloneDeep function from lodash.")))}d.isMDXComponent=!0}}]);