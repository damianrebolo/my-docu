"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2037],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,s(s({ref:t},l),{},{components:r})):n.createElement(f,s({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var u=2;u<a;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5876:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={id:"rt-async-custom-hook",title:"Async Custom Hook",sidebar_label:"Async Custom Hook",slug:"/async-custom-hook",sidebar_position:5},s=void 0,c={unversionedId:"react-testing/rt-async-custom-hook",id:"react-testing/rt-async-custom-hook",title:"Async Custom Hook",description:"",source:"@site/docs/react-testing/rt-async-custom-hook.md",sourceDirName:"react-testing",slug:"/async-custom-hook",permalink:"/my-docu/docs/async-custom-hook",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react-testing/rt-async-custom-hook.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"rt-async-custom-hook",title:"Async Custom Hook",sidebar_label:"Async Custom Hook",slug:"/async-custom-hook",sidebar_position:5},sidebar:"mySidebar",previous:{title:"Custom Hook",permalink:"/my-docu/docs/custom-hook"}},i={},u=[],l={toc:u};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { useState, useEffect } from "react";\n\nexport function useAPI() {\n  const [data, setData] = useState<{\n    name: string;\n  }>();\n\n  useEffect(() => {\n    let isMounted = true;\n    fetch("/api")\n      .then((response) => response.json())\n      .then((data) => {\n        if (isMounted) {\n          setData(data);\n        }\n      });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  return data;\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { renderHook, act } from "@testing-library/react-hooks";\nimport { rest } from "msw";\nimport { setupServer } from "msw/node";\n\nimport { useAPI } from "./useAPI";\n\nconst server = setupServer(\n  rest.get("/api", (req, res, ctx) => {\n    return res(ctx.json({ name: "Jack" }));\n  })\n);\n\nbeforeAll(() => server.listen());\nafterEach(() => server.resetHandlers());\nafterAll(() => server.close());\n\ntest("should increment", async () => {\n  const { result, waitForNextUpdate } = renderHook(() => useAPI());\n\n  await waitForNextUpdate();\n\n  expect(result.current).toEqual({ name: "Jack" });\n});\n')))}p.isMDXComponent=!0}}]);